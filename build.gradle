buildscript {
    repositories {
        maven {
            name = "forge"
            url = "http://maven.minecraftforge.net/"
        }
	maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Modmuss50"
            url = "http://maven.modmuss50.me/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.2.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'

def signJar(archivePath) {
    if (project.hasProperty("keyStoreAlias") && project.hasProperty("keyStore") && project.hasProperty("keyStorePass")) {
        ant.signjar(
            jar:                  archivePath,
            alias:                project.keyStoreAlias,
            keystore:             project.keyStore,
            storepass:            project.keyStorePass,
            preservelastmodified: true
        )
    } else {
        println "WARNING!!!\tCannot sign jar!"
    }
}

version = "1.0.3-Reborn"
group= "com.wildex999.tickdynamic"
archivesBaseName = "TickDynamic-1.12.2"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


minecraft {
    version = "1.12.2-14.23.5.2860"
    runDir = "run"
    replace '${version}', project.version
    mappings = "snapshot_20170815"
	
	clientRunArgs += "--uuid=0b1ec5ad-cb2a-43b7-995d-889320eb2e5b --username=The_Fireplace"
}

dependencies {
	
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task showVersion {
    description "Displays the current version"
    group "help"
    
    compileJava.dependsOn showVersion
    deobfCompileDummyTask.dependsOn showVersion
    extractMcpMappings.dependsOn showVersion
  
    doLast {
        def versionFile = new File(buildDir, '.version')
    
        versionFile.getParentFile().mkdirs()
        versionFile.text = version
    }
    
    outputs.upToDateWhen { false }
}

jar {
     manifest {
             attributes 'FMLCorePlugin': 'com.wildex999.tickdynamic.LoadingPlugin',
                         'FMLCorePluginContainsFMLMod': 'true'
         }

     doLast {
         if (!gradle.taskGraph.hasTask(reobfJar)) {
             signJar(jar)
         }
     }
 }

 reobfJar {
     doLast {
         signJar(jar)
     }
 }

 task deobfJar(type: Jar) {
     classifier = "deobf"
     manifest {
                 attributes 'FMLCorePlugin': 'com.wildex999.tickdynamic.LoadingPlugin',
                             'FMLCorePluginContainsFMLMod': 'true'
             }

     doLast {
         signJar(deobfJar.archivePath)
     }
 }

 sourceJar {

     doLast {
         signJar(sourceJar.archivePath)
     }
 }


artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

